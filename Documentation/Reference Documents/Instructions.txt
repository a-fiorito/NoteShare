IMPORTANT COMMANDS: (all commands in project directory)
- when cloning the repo for the first time on a new machine
- make you sure do: npm install
- if someone installed a new dependency and you pulled from the repo
- make sure you do: npm install
- To start the server: npm start
- The server will be running on port 3000. Go to: localhost:3000 in your browser
- run jest to run unit tests

IMPORTANT GIT COMMANDS
- clone the repo: git clone repo-url.git
- As soon as you clone the repository, get off the master branch
- create a new branch by doing: git checkout -b 'branch-name-goes-here'
- once you make changes to your branch that you'd like to save, type: git status
- this will show you the file changes, to add a file use: git add 'file-name-here'
- to add all the files use: git add .
- once you add the files use: git commit -m 'commit message here'
- Make sure you include a useful but short commit message
- Lastly, to push the changes to your branch type: git push
- if its the first time youre pushing youll have to: git push -u origin 'branch-name-goes-here'
- if you want to merge into master, go to the github website and create a pull request.
- Make sure you at least assign me as a reviewer, and any other teammates you feel appropriate.

MARK: SOURCE FILES

- All source files go in the /src directory
- Assets like images go in the assests folder

- All React components and Javascript source files go in the /js directory
- Help keep organization by creating new directories in /js if you need a lot of files for one specific thing
- Dont Touch App.jsx
- All your top level components go in between the div tags in the Noteshare component 

- All styling goes in the /scss directory
- Create a seperate file for each component to avoid merge conflicts
- import your scss files into the main.scss file (see main.scss for more info)
- Nest your css selectors so that selectors dont conflict with other memebers (see main.scss for more info)
- SCSS has variables to use at your convenience, learn more about the features below
- http://sass-lang.com/guide

- index.html, just contains the basic info for a html page. React does the REST

MARK: SERVER

- server.js contains the main nodejs express server
- routes will contain the routing for our REST API
- db contains db connection, table creation and initialization


MARK: UNIT TESTING

- All unit tests go in the __tests__ directory
- All test files end with .test.js extension
- run "jest" or "npm run test" in file directory to run unit tests

MARK: DEPENDENCIES
- package.json: contains list of all dependencies and dev-dependencies
- talk to the team when wanting to install new dependencies so everyone is aware
- node_modules contains all the source files of dependencies 

MARK: DISTRIBUTION

- All compiled source files go into the /dist directory
- Webpack generates this automatically for us

MARK: OTHER 

- .gitignore: add files here that need to be in the project directory but not on the repository
- example: visual studio code creates a .vscode directory for editor settings

- .travis.yml: used for continuous integration

- .babelrc: needed for jest testing, not sure why

- LISCENSE: might as well make it open source unless you disagree

- README.md: info about the repository

- webpack.config: configures webpack hot reload and bundling

